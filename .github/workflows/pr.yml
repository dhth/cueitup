name: pr

on:
  pull_request:

env:
  GO_VERSION: '1.24.2'
  GLEAM_VERSION: '1.10.0'

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      gleam: ${{ steps.filter.outputs.gleam }}
      go: ${{ steps.filter.outputs.go }}
      release: ${{ steps.filter.outputs.release }}
      workflows: ${{ steps.filter.outputs.workflows }}
      yml: ${{ steps.filter.outputs.yml }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            gleam:
              - "internal/server/_client/**"
              - ".github/workflows/pr.yml"
            go:
              - "cmd/**"
              - "internal/**"
              - "tests/**"
              - "**/*.go"
              - "go.*"
              - ".golangci.yml"
              - "main.go"
              - ".github/workflows/pr.yml"
            release:
              - ".goreleaser.yaml"
              - ".github/workflows/pr.yml"
            workflows:
              - ".github/workflows/**.yml"
            yml:
              - "**.yml"
              - "**.yaml"

  lint-go:
    needs: changes
    if: ${{ needs.changes.outputs.go == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1

  lint-gleam:
    needs: changes
    if: ${{ needs.changes.outputs.gleam == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        with:
          otp-version: "27.1"
          gleam-version: ${{ env.GLEAM_VERSION }}
          rebar3-version: "3"
      - name: Compile gleam to js
        run: |
          cd internal/server/_client
          gleam deps download
          gleam format src --check

  build-go:
    needs: changes
    if: ${{ needs.changes.outputs.go == 'true' }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: go build
        run: go build -v ./...
      - name: go test
        run: go test -v ./...

  build-gleam:
    needs: changes
    if: ${{ needs.changes.outputs.gleam == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        with:
          otp-version: "27.1"
          gleam-version: ${{ env.GLEAM_VERSION }}
          rebar3-version: "3"
      - name: Compile gleam to js
        run: |
          cd internal/server/_client
          gleam deps download
          gleam run -m lustre/dev build app
      - name: Ensure compiled files haven't changed
        run: |
          if git --no-pager diff --name-only | grep -q "priv/static"; then
            echo "compiled files have changed; compile them again"
            git --no-pager diff --name-only
            false
          fi

  test-go:
    needs: changes
    if: ${{ needs.changes.outputs.go == 'true' }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run tests
        env:
          INTEGRATION: "1"
        run: go test ./... -v

  lint-yaml:
    needs: changes
    if: ${{ needs.changes.outputs.yml == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: dhth/composite-actions/.github/actions/lint-yaml@main

  lint-workflows:
    needs: changes
    if: ${{ needs.changes.outputs.workflows == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: dhth/composite-actions/.github/actions/lint-actions@main

  release-check:
    needs: changes
    if: ${{ needs.changes.outputs.release == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Release check
        uses: goreleaser/goreleaser-action@v6
        with:
          version: 'v2.9.0'
          args: check
